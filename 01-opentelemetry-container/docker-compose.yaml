services:


# Zookeeper
  zookeeper:
    image: docker.io/confluentinc/cp-zookeeper:latest
    container_name: confluent-kafka_zookeeper
    ports:
      - "2181:2181"
    env_file:
      - ./values.env
    restart: unless-stopped
    networks:
      - otel-demo

# Kafka
  kafka:
    image: docker.io/confluentinc/cp-kafka:latest
    container_name: confluent-kafka_broker
    depends_on:
      - zookeeper
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "29092:29092"
    env_file:
      - ./values.env
    networks:
      - otel-demo

# Kafdrop
  kafdrop:
    image: docker.io/obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    env_file:
      - ./values.env
    depends_on:
      - "zookeeper"
      - "kafka"
    networks:
      - otel-demo

#======================================================

# Jaeger
  jaeger:
    image: docker.io/jaegertracing/jaeger
    container_name: jaeger
    restart: unless-stopped
    env_file:
      - ./values.env
    ports:
      - "8880:8888"
      - "8881:8889"
      - "16686:16686"
      - "4311:4317"
      - "4312:4318"
    networks:
      - otel-demo


# tempo
  tempo:
    image: docker.io/grafana/tempo
    container_name: tempo
    restart: unless-stopped
    env_file:
      - ./values.env
    ports:
      - "14269:14268"  # jaeger ingest
      - "3201:3200"   # tempo
      - "9096:9095" # tempo grpc
      - "4313:4317"  # otlp grpc
      - "4314:4318"  # otlp http
      - "9412:9411"   # zipkin
    user: 0:0
    privileged: true
    volumes:
      - ./tempo-container-configs/tempo-config.yml:/etc/tempo.yaml
      - tempo-var-data:/tmp/tempo/traces
    command: [ "-config.file=/etc/tempo.yaml" ]
    networks:
      - otel-demo


# Prometheus
  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    user: 0:0
    privileged: true
    volumes:
      - ./prometheus-container-configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - otel-demo

# Grafana
  grafana:
    image: docker.io/grafana/grafana-enterprise:latest
    container_name: grafana
    restart: unless-stopped
    env_file:
      - ./values.env
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-container-configs/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    networks:
      - otel-demo

#======================================================

# Opentelemetry
  otelcol:
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.106.1
    container_name: otel-collector
    restart: unless-stopped
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "8888:8888" # Prometheus metrics
      - "9090:9090" # Prometheus metrics
    command: [ "--config=/etc/otelcol-contrib/config.yaml" ]
    user: 0:0
    privileged: true
    volumes:
      - ./otel-container-configs/otelcol-config.yaml:/etc/otelcol-contrib/config.yaml
    networks:
      - otel-demo
    depends_on:
       - zookeeper
       - kafka
       - prometheus

#======================================================

networks:
  otel-demo:
    external: true

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  tempo-var-data:
    driver: local
